name: build e push docker image recommendation-service

on:
  push:
    branches: [ "main" ]
    paths:
      - 'recommendation-service/Dockerfile'
      - 'recommendation-service/recommendation.py'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Obter vers達o atual
      id: get_version
      run: |
        VERSION=${{ secrets.VERSION_RECOMMENDATION_SERVICE }}
        echo "Vers達o inicial: $VERSION"

        VERSION_MAJOR=$(echo $VERSION | awk -F. '{print $1}')
        VERSION_MINOR=$(echo $VERSION | awk -F. '{print $2+1}')
        VERSION="${VERSION_MAJOR}.${VERSION_MINOR}"

        echo "VERSION_RECOMMENDATION_SERVICE=$VERSION" >> $GITHUB_ENV
        echo "Nova vers達o: $VERSION"

    - name: Configurar Docker
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build e Push imagem Docker
      run: |
        docker build -t luccaspc/recommendation-service:${{ env.VERSION_RECOMMENDATION_SERVICE }} ./recommendation-service
        docker push luccaspc/recommendation-service:${{ env.VERSION_RECOMMENDATION_SERVICE }}

    - name: Atualizar deployment com nova tag
      run: |
        sed -i "s|image: luccaspc/recommendation-service:.*|image: luccaspc/recommendation-service:${{ env.VERSION_RECOMMENDATION_SERVICE }}|" deployment-training-model.yaml
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add deployment-training-model.yaml
        git commit -m "Atualiza imagem do Recommendation Service para vers達o ${{ env.VERSION_RECOMMENDATION_SERVICE }}"
        git tag v${{ env.VERSION_RECOMMENDATION_SERVICE }}
        git push origin main --tags
